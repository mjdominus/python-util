
* Merge records when consistent!
  * Move the merging logic into a separate object

o Advisory locking
    Do this later, you're the only one using this program
    
o `pay-bill` utility program
  * It can raise a flag: "hey, you already paid this!"
  * Needs better lookup mechanisms:
    * Claim number prefix or suffix
    * Date of service (with menu for ambiguous claims)
    * Doctor substring match (ditto)
  o Needs option for command-line argument claim numbers
  o Needs option that says "these claim numbers were all paid at the
    same time by the same check"
  o More general mechanisms:
    o What if I will never pay by check, say because the claim
      represents a co-pay that was paid onsite?  Probably: Mark as
      "paid", add a "NOTE: copay on-site" or something.

      This is in progress now. I can make a partial payment and add a
      note that says why the amounts differ.  It gets marked "paid" if
      its fully-paid and "partial" if it really is only partially paid.

o `import-claims` utility program
   o Needs --verbose option
     At least to mention how many records were imported.
   o XML importer needs its diagnostic messages to
     include a filename if possible

* Better field loading:
  * This is in progress -- we now have an "xml_conversions"
    table that says how to convert values in each field from XML to
    internal format

  * Parse dates as dates
    x They're still stored in the YAML file as YYYY-MM-DD strings
      Do you want them stored as date objects?  Naah, probably not.
  * Strip quotes from claim IDs
  * Translate patient IDs?
  * Convert money amounts to numbers

  * Move this logic into a separate object - it's specific to the
    Anthem Blue Cross XML format of the week and should be specified
    as such

    * At the same time you can move those regexes and translation
      tables into the conversion object

    * Also it includes your family's names and birthdays so you
      don't want to share it on Github

* Don't let file objects go out of scope; use the
        with open(...) as f:
  pattern

* Break out XML importation into a separate object because it's not
  actually an XML importer, it's an Anthem Blue Cross XML format of
  the week importer

o Slightly better configuration system.  Right now the path to the
  database is hardwired into the import-xml and pay-bill tools.
  Don't overdo this.

o Break out app utils from pay-bill into an apputils.py module.
  Rewrite pay-bill to import it.  Then create:
  o find-claim
  o annotate-claim
  o What else?

o Better work flow.  Typical example: Got three bills from labcorp.  I
  would like to write a single check and mail it in a single
  envelope.  Instead of having a single selected claim, pay-bill
  should allow me to select several in sequence, and when I tell it
  I'm done it should prompt me with the total amount and ask for the
  check number.

